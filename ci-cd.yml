name: CI/CD Pipeline

on:
  push:
    branches:
      - main    # Trigger on push to main branch
  pull_request:
    branches:
      - main    # Trigger on PR to main branch

jobs:
  # Job 1: Lint the code
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint Python code
        run: |
          pip install flake8
          flake8 . --max-line-length=120

  # Job 2: Build Docker Image and Push to Container Registry
  build-and-push:
    runs-on: ubuntu-latest
    needs: lint     # Only runs after lint job passes
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t your-dockerhub-username/cde-capstone:latest .
          docker push your-dockerhub-username/cde-capstone:latest
          
  # Job 3: Terraform Apply (Infrastructure as Code)
  terraform:
    runs-on: ubuntu-latest
    needs: build-and-push  # Runs after Docker build and push job
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Install Terraform dependencies
        run: terraform init

      - name: Run Terraform Apply
        run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'ap-south-1'
